{"ast":null,"code":"var _jsxFileName = \"/Users/tuvace/Desktop/FoodMaster/src/CalendarDay.js\";\n// Open Source project from ...\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { polyfill } from 'react-lifecycles-compat'; //import { Text, View, LayoutAnimation, TouchableOpacity } from \"react-native\";\n\nimport styles from \"./Calendar.style.js\";\n\nclass CalendarDay extends Component {\n  // Reference: https://medium.com/@Jpoliachik/react-native-s-layoutanimation-is-awesome-4a4d317afd3e\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: props.selected,\n      ...this.calcSizes(props)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let newState = {};\n    let doStateUpdate = false;\n    /* if (this.props.selected !== prevProps.selected) {\n       if (this.props.daySelectionAnimation.type !== \"\") {\n         let configurableAnimation = {\n           duration: this.props.daySelectionAnimation.duration || 300,\n           create: {\n             type:\n               this.props.daySelectionAnimation.animType ||\n               LayoutAnimation.Types.easeInEaseOut,\n             property:\n               this.props.daySelectionAnimation.animProperty ||\n               LayoutAnimation.Properties.opacity\n           },\n           update: {\n             type:\n               this.props.daySelectionAnimation.animUpdateType ||\n               LayoutAnimation.Types.easeInEaseOut,\n             springDamping: this.props.daySelectionAnimation.animSpringDamping\n           },\n           delete: {\n             type:\n               this.props.daySelectionAnimation.animType ||\n               LayoutAnimation.Types.easeInEaseOut,\n             property:\n               this.props.daySelectionAnimation.animProperty ||\n               LayoutAnimation.Properties.opacity\n           }\n           \n         };\n         LayoutAnimation.configureNext(configurableAnimation);\n       }\n       newState.selected = this.props.selected;\n       doStateUpdate = true;\n     }\n      if (prevProps.size !== this.props.size) {\n       newState = { ...newState, ...this.calcSizes(this.props) };\n       doStateUpdate = true;\n     }\n      if (doStateUpdate) {\n       this.setState(newState);\n     }\n     */\n  }\n\n  calcSizes(props) {\n    return {\n      containerSize: Math.round(props.size),\n      containerPadding: Math.round(props.size / 5),\n      containerBorderRadius: Math.round(props.size / 2),\n      dateNameFontSize: Math.round(props.size / 5),\n      dateNumberFontSize: Math.round(props.size / 2.9)\n    };\n  }\n\n  renderDots() {\n    if (!this.props.markedDates || this.props.markedDates.length === 0) {\n      return;\n    }\n\n    const marking = this.props.marking || {}; //const baseDotStyle = [styles.dot, styles.visibleDot];\n\n    const markedDatesStyle = this.props.markedDatesStyle || {};\n    let validDots = /*#__PURE__*/React.createElement(View, {\n      style: [styles.dot],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }); // default empty view for no dots case\n\n    /*if (marking.dots && Array.isArray(marking.dots) && marking.dots.length > 0) {\n      // Filter out dots so that we we process only those items which have key and color property\n      validDots = marking.dots\n        .filter(d => (d && d.color))\n        .map((dot, index) => {\n        return (\n          <View\n            key={dot.key ? dot.key : index}\n            style={[\n              baseDotStyle,\n              { backgroundColor: marking.selected && dot.selectedDotColor ? dot.selectedDotColor : dot.color },\n              markedDatesStyle\n            ]}\n          />\n        );\n      });\n    }\n    */\n\n    return /*#__PURE__*/React.createElement(View, {\n      style: styles.dotsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, validDots);\n  }\n\n  render() {\n    // Defaults for disabled state\n    let dateNameStyle = [styles.dateName, this.props.enabled ? this.props.dateNameStyle : this.props.disabledDateNameStyle];\n    let dateNumberStyle = [styles.dateNumber, this.props.enabled ? this.props.dateNumberStyle : this.props.disabledDateNumberStyle];\n    let dateViewStyle = this.props.enabled ? [{\n      backgroundColor: \"transparent\"\n    }] : [{\n      opacity: this.props.disabledDateOpacity\n    }];\n    let customStyle = this.props.customStyle;\n\n    if (customStyle) {\n      dateNameStyle.push(customStyle.dateNameStyle);\n      dateNumberStyle.push(customStyle.dateNumberStyle);\n      dateViewStyle.push(customStyle.dateContainerStyle);\n    }\n\n    if (this.props.enabled && this.state.selected) {\n      // Enabled state\n      //The user can disable animation, so that is why I use selection type\n      //If it is background, the user have to input colors for animation\n      //If it is border, the user has to input color for border animation\n      switch (this.props.daySelectionAnimation.type) {\n        case \"background\":\n          dateViewStyle.push({\n            backgroundColor: this.props.daySelectionAnimation.highlightColor\n          });\n          break;\n\n        case \"border\":\n          dateViewStyle.push({\n            borderColor: this.props.daySelectionAnimation.borderHighlightColor,\n            borderWidth: this.props.daySelectionAnimation.borderWidth\n          });\n          break;\n\n        default:\n          // No animation styling by default\n          break;\n      }\n\n      dateNameStyle = [styles.dateName, this.props.dateNameStyle];\n      dateNumberStyle = [styles.dateNumber, this.props.dateNumberStyle];\n\n      if (this.props.styleWeekend && (this.props.date.isoWeekday() === 6 || this.props.date.isoWeekday() === 7)) {\n        dateNameStyle = [styles.weekendDateName, this.props.weekendDateNameStyle];\n        dateNumberStyle = [styles.weekendDateNumber, this.props.weekendDateNumberStyle];\n      }\n\n      if (this.state.selected) {\n        dateNameStyle = [styles.dateName, this.props.highlightDateNameStyle];\n        dateNumberStyle = [styles.dateNumber, this.props.highlightDateNumberStyle];\n      }\n    }\n\n    let responsiveDateContainerStyle = {\n      width: this.state.containerSize,\n      height: this.state.containerSize,\n      borderRadius: this.state.containerBorderRadius,\n      padding: this.state.containerPadding\n    };\n    return /*#__PURE__*/React.createElement(TouchableOpacity, {\n      onPress: this.props.onDateSelected.bind(this, this.props.date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      key: this.props.date,\n      style: [styles.dateContainer, responsiveDateContainerStyle, dateViewStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }, this.props.showDayName && /*#__PURE__*/React.createElement(Text, {\n      style: [{\n        fontSize: this.state.dateNameFontSize\n      }, dateNameStyle],\n      allowFontScaling: this.props.allowDayTextScaling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, this.props.date.format(\"ddd\").toUpperCase()), this.props.showDayNumber && /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: [{\n        fontSize: this.state.dateNumberFontSize\n      }, dateNumberStyle],\n      allowFontScaling: this.props.allowDayTextScaling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, this.props.date.date()), this.renderDots())));\n  }\n\n}\n\nCalendarDay.propTypes = {\n  date: PropTypes.object.isRequired,\n  onDateSelected: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  enabled: PropTypes.bool.isRequired,\n  marking: PropTypes.any,\n  markedDates: PropTypes.array,\n  showDayName: PropTypes.bool,\n  showDayNumber: PropTypes.bool,\n  calendarColor: PropTypes.string,\n  dateNameStyle: PropTypes.any,\n  dateNumberStyle: PropTypes.any,\n  weekendDateNameStyle: PropTypes.any,\n  weekendDateNumberStyle: PropTypes.any,\n  highlightDateNameStyle: PropTypes.any,\n  highlightDateNumberStyle: PropTypes.any,\n  disabledDateNameStyle: PropTypes.any,\n  disabledDateNumberStyle: PropTypes.any,\n  markedDatesStyle: PropTypes.object,\n  disabledDateOpacity: PropTypes.number,\n  styleWeekend: PropTypes.bool,\n  customStyle: PropTypes.object,\n  daySelectionAnimation: PropTypes.object,\n  allowDayTextScaling: PropTypes.bool\n};\nCalendarDay.defaultProps = {\n  daySelectionAnimation: {\n    type: \"\",\n    // animations disabled by default\n    duration: 300,\n    borderWidth: 1,\n    borderHighlightColor: \"black\",\n    highlightColor: \"yellow\",\n    //animType: LayoutAnimation.Types.easeInEaseOut,\n    //animUpdateType: LayoutAnimation.Types.easeInEaseOut,\n    //animProperty: LayoutAnimation.Properties.opacity,\n    animSpringDamping: undefined // Only applicable for LayoutAnimation.Types.spring,\n\n  },\n  styleWeekend: true,\n  showDayName: true,\n  showDayNumber: true\n};\npolyfill(CalendarDay);\nexport default CalendarDay;","map":{"version":3,"sources":["/Users/tuvace/Desktop/FoodMaster/src/CalendarDay.js"],"names":["React","Component","PropTypes","polyfill","styles","CalendarDay","constructor","props","state","selected","calcSizes","componentDidUpdate","prevProps","prevState","newState","doStateUpdate","containerSize","Math","round","size","containerPadding","containerBorderRadius","dateNameFontSize","dateNumberFontSize","renderDots","markedDates","length","marking","markedDatesStyle","validDots","dot","dotsContainer","render","dateNameStyle","dateName","enabled","disabledDateNameStyle","dateNumberStyle","dateNumber","disabledDateNumberStyle","dateViewStyle","backgroundColor","opacity","disabledDateOpacity","customStyle","push","dateContainerStyle","daySelectionAnimation","type","highlightColor","borderColor","borderHighlightColor","borderWidth","styleWeekend","date","isoWeekday","weekendDateName","weekendDateNameStyle","weekendDateNumber","weekendDateNumberStyle","highlightDateNameStyle","highlightDateNumberStyle","responsiveDateContainerStyle","width","height","borderRadius","padding","onDateSelected","bind","dateContainer","showDayName","fontSize","allowDayTextScaling","format","toUpperCase","showDayNumber","propTypes","object","isRequired","func","bool","any","array","calendarColor","string","number","defaultProps","duration","animSpringDamping","undefined"],"mappings":"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","sourcesContent":["// Open Source project from ...\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {polyfill} from 'react-lifecycles-compat';\n\n//import { Text, View, LayoutAnimation, TouchableOpacity } from \"react-native\";\nimport styles from \"./Calendar.style.js\";\n\nclass CalendarDay extends Component {\n  static propTypes = {\n    date: PropTypes.object.isRequired,\n    onDateSelected: PropTypes.func.isRequired,\n    selected: PropTypes.bool.isRequired,\n    enabled: PropTypes.bool.isRequired,\n\n    marking: PropTypes.any,\n    markedDates: PropTypes.array,\n\n    showDayName: PropTypes.bool,\n    showDayNumber: PropTypes.bool,\n\n    calendarColor: PropTypes.string,\n\n    dateNameStyle: PropTypes.any,\n    dateNumberStyle: PropTypes.any,\n    weekendDateNameStyle: PropTypes.any,\n    weekendDateNumberStyle: PropTypes.any,\n    highlightDateNameStyle: PropTypes.any,\n    highlightDateNumberStyle: PropTypes.any,\n    disabledDateNameStyle: PropTypes.any,\n    disabledDateNumberStyle: PropTypes.any,\n    markedDatesStyle: PropTypes.object,\n    disabledDateOpacity: PropTypes.number,\n    styleWeekend: PropTypes.bool,\n    customStyle: PropTypes.object,\n\n    daySelectionAnimation: PropTypes.object,\n    allowDayTextScaling: PropTypes.bool\n  };\n\n  // Reference: https://medium.com/@Jpoliachik/react-native-s-layoutanimation-is-awesome-4a4d317afd3e\n  static defaultProps = {\n    daySelectionAnimation: {\n      type: \"\", // animations disabled by default\n      duration: 300,\n      borderWidth: 1,\n      borderHighlightColor: \"black\",\n      highlightColor: \"yellow\",\n      //animType: LayoutAnimation.Types.easeInEaseOut,\n      //animUpdateType: LayoutAnimation.Types.easeInEaseOut,\n      //animProperty: LayoutAnimation.Properties.opacity,\n      animSpringDamping: undefined // Only applicable for LayoutAnimation.Types.spring,\n    },\n    styleWeekend: true,\n    showDayName: true,\n    showDayNumber: true\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.selected,\n      ...this.calcSizes(props)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let newState = {};\n    let doStateUpdate = false;\n\n   /* if (this.props.selected !== prevProps.selected) {\n      if (this.props.daySelectionAnimation.type !== \"\") {\n        let configurableAnimation = {\n          duration: this.props.daySelectionAnimation.duration || 300,\n          create: {\n            type:\n              this.props.daySelectionAnimation.animType ||\n              LayoutAnimation.Types.easeInEaseOut,\n            property:\n              this.props.daySelectionAnimation.animProperty ||\n              LayoutAnimation.Properties.opacity\n          },\n          update: {\n            type:\n              this.props.daySelectionAnimation.animUpdateType ||\n              LayoutAnimation.Types.easeInEaseOut,\n            springDamping: this.props.daySelectionAnimation.animSpringDamping\n          },\n          delete: {\n            type:\n              this.props.daySelectionAnimation.animType ||\n              LayoutAnimation.Types.easeInEaseOut,\n            property:\n              this.props.daySelectionAnimation.animProperty ||\n              LayoutAnimation.Properties.opacity\n          }\n          \n        };\n        LayoutAnimation.configureNext(configurableAnimation);\n      }\n      newState.selected = this.props.selected;\n      doStateUpdate = true;\n    }\n\n    if (prevProps.size !== this.props.size) {\n      newState = { ...newState, ...this.calcSizes(this.props) };\n      doStateUpdate = true;\n    }\n\n    if (doStateUpdate) {\n      this.setState(newState);\n    }\n    */\n  }\n\n  calcSizes(props) {\n    return {\n      containerSize: Math.round(props.size),\n      containerPadding: Math.round(props.size / 5),\n      containerBorderRadius: Math.round(props.size / 2),\n      dateNameFontSize: Math.round(props.size / 5),\n      dateNumberFontSize: Math.round(props.size / 2.9)\n    };\n  }\n\n  renderDots() {\n    if (!this.props.markedDates || this.props.markedDates.length === 0) {\n      return;\n    }\n    const marking = this.props.marking || {};\n    //const baseDotStyle = [styles.dot, styles.visibleDot];\n    const markedDatesStyle = this.props.markedDatesStyle || {};\n    let validDots = <View style={[styles.dot]} />; // default empty view for no dots case\n\n    /*if (marking.dots && Array.isArray(marking.dots) && marking.dots.length > 0) {\n      // Filter out dots so that we we process only those items which have key and color property\n      validDots = marking.dots\n        .filter(d => (d && d.color))\n        .map((dot, index) => {\n        return (\n          <View\n            key={dot.key ? dot.key : index}\n            style={[\n              baseDotStyle,\n              { backgroundColor: marking.selected && dot.selectedDotColor ? dot.selectedDotColor : dot.color },\n              markedDatesStyle\n            ]}\n          />\n        );\n      });\n    }\n    */\n\n    return (\n      <View style={styles.dotsContainer}>\n        {validDots}\n      </View>\n    );\n  }\n\n  render() {\n    // Defaults for disabled state\n    let dateNameStyle = [styles.dateName, this.props.enabled ? this.props.dateNameStyle : this.props.disabledDateNameStyle];\n    let dateNumberStyle = [styles.dateNumber, this.props.enabled ? this.props.dateNumberStyle : this.props.disabledDateNumberStyle];\n    let dateViewStyle = this.props.enabled\n      ? [{ backgroundColor: \"transparent\" }]\n      : [{ opacity: this.props.disabledDateOpacity }];\n\n    let customStyle = this.props.customStyle;\n    if (customStyle) {\n      dateNameStyle.push(customStyle.dateNameStyle);\n      dateNumberStyle.push(customStyle.dateNumberStyle);\n      dateViewStyle.push(customStyle.dateContainerStyle);\n    }\n    if (this.props.enabled && this.state.selected) {\n      // Enabled state\n      //The user can disable animation, so that is why I use selection type\n      //If it is background, the user have to input colors for animation\n      //If it is border, the user has to input color for border animation\n      switch (this.props.daySelectionAnimation.type) {\n        case \"background\":\n          dateViewStyle.push({ backgroundColor: this.props.daySelectionAnimation.highlightColor });\n          break;\n        case \"border\":\n          dateViewStyle.push({\n            borderColor: this.props.daySelectionAnimation.borderHighlightColor,\n            borderWidth: this.props.daySelectionAnimation.borderWidth\n          });\n          break;\n        default:\n          // No animation styling by default\n          break;\n      }\n\n      dateNameStyle = [styles.dateName, this.props.dateNameStyle];\n      dateNumberStyle = [styles.dateNumber, this.props.dateNumberStyle];\n      if (\n        this.props.styleWeekend &&\n        (this.props.date.isoWeekday() === 6 ||\n          this.props.date.isoWeekday() === 7)\n      ) {\n        dateNameStyle = [\n          styles.weekendDateName,\n          this.props.weekendDateNameStyle\n        ];\n        dateNumberStyle = [\n          styles.weekendDateNumber,\n          this.props.weekendDateNumberStyle\n        ];\n      }\n      if (this.state.selected) {\n        dateNameStyle = [styles.dateName, this.props.highlightDateNameStyle];\n        dateNumberStyle = [\n          styles.dateNumber,\n          this.props.highlightDateNumberStyle\n        ];\n      }\n    }\n\n    let responsiveDateContainerStyle = {\n      width: this.state.containerSize,\n      height: this.state.containerSize,\n      borderRadius: this.state.containerBorderRadius,\n      padding: this.state.containerPadding\n    };\n\n\n    return (\n      <TouchableOpacity\n        onPress={this.props.onDateSelected.bind(this, this.props.date)}\n      >\n        <View\n          key={this.props.date}\n          style={[\n            styles.dateContainer,\n            responsiveDateContainerStyle,\n            dateViewStyle\n          ]}\n        >\n          {this.props.showDayName && (\n            <Text\n              style={[{ fontSize: this.state.dateNameFontSize }, dateNameStyle]}\n              allowFontScaling={this.props.allowDayTextScaling}\n            >\n              {this.props.date.format(\"ddd\").toUpperCase()}\n            </Text>\n          )}\n          {this.props.showDayNumber && (\n            <View>\n              <Text\n                style={[\n                    { fontSize: this.state.dateNumberFontSize },\n                    dateNumberStyle\n                ]}\n                allowFontScaling={this.props.allowDayTextScaling}\n              >\n                {this.props.date.date()}\n              </Text>\n              { this.renderDots() }\n            </View>\n          )}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\npolyfill(CalendarDay);\n\nexport default CalendarDay;"]},"metadata":{},"sourceType":"module"}