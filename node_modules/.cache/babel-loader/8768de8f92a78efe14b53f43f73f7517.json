{"ast":null,"code":"var _jsxFileName = \"/Users/tuvace/Desktop/FoodMaster/src/CalendarHeader.js\";\n// Open Source project from ...\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text, View } from \"react-native\";\nimport styles from \"./Calendar.style.js\";\n\nclass CalendarHeader extends Component {\n  shouldComponentUpdate(nextProps) {\n    return JSON.stringify(this.props) !== JSON.stringify(nextProps);\n  } //Function that formats the calendar header\n  //It also formats the month section if the week is in between months\n\n\n  formatCalendarHeader(datesForWeek, calendarHeaderFormat) {\n    if (!datesForWeek || datesForWeek.length === 0) {\n      return \"\";\n    }\n\n    let firstDay = datesForWeek[0];\n    let lastDay = datesForWeek[datesForWeek.length - 1];\n    let monthFormatting = \"\"; //Parsing the month part of the user defined formating\n\n    if ((calendarHeaderFormat.match(/Mo/g) || []).length > 0) {\n      monthFormatting = \"Mo\";\n    } else {\n      if ((calendarHeaderFormat.match(/M/g) || []).length > 0) {\n        for (let i = (calendarHeaderFormat.match(/M/g) || []).length; i > 0; i--) {\n          monthFormatting += \"M\";\n        }\n      }\n    }\n\n    if (firstDay.month() === lastDay.month()) {\n      return firstDay.format(calendarHeaderFormat);\n    } else if (firstDay.year() !== lastDay.year()) {\n      return `${firstDay.format(calendarHeaderFormat)} / ${lastDay.format(calendarHeaderFormat)}`;\n    }\n\n    return `${monthFormatting.length > 1 ? firstDay.format(monthFormatting) : \"\"} ${monthFormatting.length > 1 ? \"/\" : \"\"} ${lastDay.format(calendarHeaderFormat)}`;\n  }\n\n  render() {\n    const headerText = this.formatCalendarHeader(this.props.datesForWeek, this.props.calendarHeaderFormat);\n    return /*#__PURE__*/React.createElement(View, {\n      style: this.props.calendarHeaderContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: [styles.calendarHeader, {\n        fontSize: this.props.fontSize\n      }, this.props.calendarHeaderStyle],\n      allowFontScaling: this.props.allowHeaderTextScaling,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, headerText));\n  }\n\n}\n\nCalendarHeader.propTypes = {\n  calendarHeaderFormat: PropTypes.string.isRequired,\n  calendarHeaderContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  calendarHeaderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  datesForWeek: PropTypes.array.isRequired,\n  allowHeaderTextScaling: PropTypes.bool\n};\nexport default CalendarHeader;","map":{"version":3,"sources":["/Users/tuvace/Desktop/FoodMaster/src/CalendarHeader.js"],"names":["React","Component","PropTypes","Text","View","styles","CalendarHeader","shouldComponentUpdate","nextProps","JSON","stringify","props","formatCalendarHeader","datesForWeek","calendarHeaderFormat","length","firstDay","lastDay","monthFormatting","match","i","month","format","year","render","headerText","calendarHeaderContainerStyle","calendarHeader","fontSize","calendarHeaderStyle","allowHeaderTextScaling","propTypes","string","isRequired","oneOfType","object","number","array","bool"],"mappings":"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","sourcesContent":["// Open Source project from ...\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text, View } from \"react-native\";\n\nimport styles from \"./Calendar.style.js\";\n\nclass CalendarHeader extends Component {\n  static propTypes = {\n    calendarHeaderFormat: PropTypes.string.isRequired,\n    calendarHeaderContainerStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number\n    ]),\n    calendarHeaderStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.number\n    ]),\n    datesForWeek: PropTypes.array.isRequired,\n    allowHeaderTextScaling: PropTypes.bool\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return JSON.stringify(this.props) !== JSON.stringify(nextProps);\n  }\n\n  //Function that formats the calendar header\n  //It also formats the month section if the week is in between months\n  formatCalendarHeader(datesForWeek, calendarHeaderFormat) {\n    if (!datesForWeek || datesForWeek.length === 0) {\n      return \"\";\n    }\n\n    let firstDay = datesForWeek[0];\n    let lastDay = datesForWeek[datesForWeek.length - 1];\n    let monthFormatting = \"\";\n    //Parsing the month part of the user defined formating\n    if ((calendarHeaderFormat.match(/Mo/g) || []).length > 0) {\n      monthFormatting = \"Mo\";\n    } else {\n      if ((calendarHeaderFormat.match(/M/g) || []).length > 0) {\n        for (\n          let i = (calendarHeaderFormat.match(/M/g) || []).length;\n          i > 0;\n          i--\n        ) {\n          monthFormatting += \"M\";\n        }\n      }\n    }\n\n    if (firstDay.month() === lastDay.month()) {\n      return firstDay.format(calendarHeaderFormat);\n    } else if (firstDay.year() !== lastDay.year()) {\n      return `${firstDay.format(calendarHeaderFormat)} / ${lastDay.format(\n        calendarHeaderFormat\n      )}`;\n    }\n\n    return `${\n      monthFormatting.length > 1 ? firstDay.format(monthFormatting) : \"\"\n    } ${monthFormatting.length > 1 ? \"/\" : \"\"} ${lastDay.format(\n      calendarHeaderFormat\n    )}`;\n  }\n\n  render() {\n    const headerText = this.formatCalendarHeader(\n      this.props.datesForWeek,\n      this.props.calendarHeaderFormat\n    );\n    return (\n      <View style={this.props.calendarHeaderContainerStyle}>\n        <Text\n          style={[\n            styles.calendarHeader,\n            { fontSize: this.props.fontSize },\n            this.props.calendarHeaderStyle\n          ]}\n          allowFontScaling={this.props.allowHeaderTextScaling}\n        >\n          {headerText}\n        </Text>\n      </View>\n    );\n  }\n}\n\nexport default CalendarHeader;"]},"metadata":{},"sourceType":"module"}